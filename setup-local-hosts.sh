#!/bin/bash

# Script para configurar hosts para teste local SSL

LOCAL_DOMAIN="n8n-local.com"
HOSTS_FILE="/etc/hosts"

echo "üåê Configurando hosts para teste local SSL"
echo "==========================================="
echo "Dom√≠nio: $LOCAL_DOMAIN"
echo ""

# Verificar se √© root/sudo para modificar hosts
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå Este script precisa de permiss√µes de root para modificar $HOSTS_FILE"
   echo "Execute: sudo $0"
   echo ""
   echo "üìù Ou adicione manualmente ao $HOSTS_FILE:"
   echo "127.0.0.1 $LOCAL_DOMAIN"
   exit 1
fi

# Verificar se entrada j√° existe
if grep -q "$LOCAL_DOMAIN" $HOSTS_FILE; then
    echo "‚úÖ Entrada para $LOCAL_DOMAIN j√° existe em $HOSTS_FILE"
    echo "üìã Entrada atual:"
    grep "$LOCAL_DOMAIN" $HOSTS_FILE
else
    # Adicionar entrada ao hosts
    echo "‚ûï Adicionando entrada ao $HOSTS_FILE..."
    echo "127.0.0.1 $LOCAL_DOMAIN" >> $HOSTS_FILE
    echo "‚úÖ Entrada adicionada com sucesso!"
fi

echo ""
echo "üß™ Para testar a configura√ß√£o:"
echo ""
echo "1. Gerar certificados SSL locais:"
echo "   ./generate-local-ssl.sh"
echo ""
echo "2. Iniciar containers SSL:"
echo "   docker-compose -f docker-compose-ssl.yml up -d"
echo ""
echo "3. Testar resolu√ß√£o DNS:"
echo "   ping $LOCAL_DOMAIN"
echo "   nslookup $LOCAL_DOMAIN"
echo ""
echo "4. Testar HTTPS:"
echo "   curl -k https://$LOCAL_DOMAIN/health"
echo "   # -k ignora certificado auto-assinado"
echo ""
echo "5. Acessar no navegador:"
echo "   https://$LOCAL_DOMAIN"
echo ""
echo "üóëÔ∏è  Para remover depois:"
echo "   sudo sed -i '/$LOCAL_DOMAIN/d' $HOSTS_FILE"
